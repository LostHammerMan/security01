// 1. queryDsl version 정보 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'war'
	// 2. querydsl plugins 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}
bootWar {
	enabled = true
}



group = 'com.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'com.github.spullara.mustache.java:compiler:0.9.5'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// spring mail
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.1'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/*// 파일 업로드 dependency
	implementation 'commons-io:commons-io:2.11.0'*/

	// jsp 라이브러리
	implementation 'javax.servlet:jstl'
	implementation "org.apache.tomcat.embed:tomcat-embed-jasper"

	// 시큐리티 태그 라이브러리
	implementation 'org.springframework.security:spring-security-taglibs'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// 3. querydsl dependencies 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Apache Tika - 다양한 형태의 파일, 데이터 감지 추출
	// https://mvnrepository.com/artifact/org.apache.tika/tika-core
	implementation group: 'org.apache.tika', name: 'tika-core', version: '2.8.0'

	// https://mvnrepository.com/artifact/org.apache.tika/tika-parsers
	implementation group: 'org.apache.tika', name: 'tika-parsers', version: '2.7.0', ext: 'pom'

	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.17.2'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.26.0'
	

	// Quartz 라이브러리 - 스케쥴러
	// https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
//	implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
//
//	// https://mvnrepository.com/artifact/org.quartz-scheduler/quartz-jobs
//	implementation group: 'org.quartz-scheduler', name: 'quartz-jobs', version: '2.3.2'

	// simple catpcha
	implementation files('libs/simplecaptcha-1.2.1.jar')
	// https://mvnrepository.com/artifact/nl.captcha/simplecaptcha
//	implementation group: 'nl.captcha', name: 'simplecaptcha', version: '1.2.1'

	//
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

// https://mvnrepository.com/artifact/org.springframework.batch/spring-batch-core
	implementation group: 'org.springframework.batch', name: 'spring-batch-core', version: '4.3.10'
	




	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// test 에서 롬복 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
	main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
